<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>br.com.pontointeligente</groupId>
    <artifactId>pontointeligente</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>pontointeligente</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <opentracing-spring-jaeger-web-starter.version>3.1.1</opentracing-spring-jaeger-web-starter.version>
        <spring-cloud-starter-openfeign.version>2.2.2.RELEASE</spring-cloud-starter-openfeign.version>
        <spring-boot-starter-data-redis.version>2.2.6.RELEASE</spring-boot-starter-data-redis.version>
        <aws-java-sdk-dynamodb.version>1.11.729</aws-java-sdk-dynamodb.version>
        <spring-data-dynamodb.version>5.0.3</spring-data-dynamodb.version>
        <springfox-swagger2.version>2.9.2</springfox-swagger2.version>
        <springfox-swagger.version>2.9.2</springfox-swagger.version>
        <spring-retry.version>1.2.5.RELEASE</spring-retry.version>
        <spring-kafka.version>2.4.1.RELEASE</spring-kafka.version>
        <mockito-kotlin.version>2.2.0</mockito-kotlin.version>
        <kakfa-clients.version>2.4.0</kakfa-clients.version>
        <log4j-core.version>2.13.0</log4j-core.version>
        <log4j-api.version>2.15.0</log4j-api.version>
        <kotlin.version>1.3.61</kotlin.version>
        <jacoco.version>0.8.5</jacoco.version>
        <json.version>20190722</json.version>
        <gson.version>2.8.6</gson.version>
        <java.version>11</java.version>
    </properties>

    <modules>
        <module>pontointeligente-infrastructure</module>
        <module>pontointeligente-common-kafka</module>
        <module>pontointeligente-application</module>
        <module>pontointeligente-repository</module>
        <module>pontointeligente-service</module>
        <module>pontointeligente-domain</module>
        <module>pontointeligente-api</module>
    </modules>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>br.com.pontointeligente</groupId>
                <artifactId>pontointeligente-application</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>br.com.pontointeligente</groupId>
                <artifactId>pontointeligente-domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>br.com.pontointeligente</groupId>
                <artifactId>pontointeligente-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>br.com.pontointeligente</groupId>
                <artifactId>pontointeligente-common-kafka</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>br.com.pontointeligente</groupId>
                <artifactId>pontointeligente-repository</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>br.com.pontointeligente</groupId>
                <artifactId>pontointeligente-infrastructure</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>br.com.pontointeligente</groupId>
                <artifactId>pontointeligente-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nhaarman.mockitokotlin2</groupId>
                <artifactId>mockito-kotlin</artifactId>
                <version>${mockito-kotlin.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka -->
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kakfa-clients.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.springframework.retry/spring-retry -->
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${spring-retry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j-api.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j-core.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-dynamodb -->
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-dynamodb</artifactId>
                <version>${aws-java-sdk-dynamodb.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.github.spring-data-dynamodb/spring-data-dynamodb -->
            <dependency>
                <groupId>com.github.spring-data-dynamodb</groupId>
                <artifactId>spring-data-dynamodb</artifactId>
                <version>${spring-data-dynamodb.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.json/json -->
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${json.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring-cloud-starter-openfeign.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger2.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/io.opentracing.contrib/opentracing-spring-jaeger-web-starter -->
            <dependency>
                <groupId>io.opentracing.contrib</groupId>
                <artifactId>opentracing-spring-jaeger-web-starter</artifactId>
                <version>${opentracing-spring-jaeger-web-starter.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot-starter-data-redis.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
<!--            <dependency>-->
<!--                <groupId>ch.qos.logback</groupId>-->
<!--                <artifactId>logback-classic</artifactId>-->
<!--                <version>1.2.3</version>-->
<!--            </dependency>-->
            <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
<!--            <dependency>-->
<!--                <groupId>ch.qos.logback</groupId>-->
<!--                <artifactId>logback-core</artifactId>-->
<!--                <version>1.2.3</version>-->
<!--            </dependency>-->
        </dependencies>
    </dependencyManagement>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->

                            <dataFile>target/jacoco.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>target/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                        <plugin>jpa</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
